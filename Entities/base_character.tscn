[gd_scene load_steps=29 format=3 uid="uid://u6h2gy046ire"]

[ext_resource type="Script" path="res://Scripts/base_character.gd" id="1_tsjtj"]
[ext_resource type="Texture2D" uid="uid://sygy7r54gclo" path="res://Sprites/Test/B_witch.png" id="2_8g7ec"]
[ext_resource type="PackedScene" uid="uid://0miocmby7x6f" path="res://Entities/player_craft.tscn" id="3_muq4u"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_w1ie2"]
bg_color = Color(0.235294, 0.0862745, 0.0352941, 1)
corner_radius_top_left = 1
corner_radius_top_right = 1
corner_radius_bottom_right = 1
corner_radius_bottom_left = 1
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_1ntwy"]
bg_color = Color(0.647059, 0.372549, 0.176471, 1)
corner_radius_top_left = 1
corner_radius_top_right = 1
corner_radius_bottom_right = 1
corner_radius_bottom_left = 1
anti_aliasing = false
anti_aliasing_size = 0.01

[sub_resource type="Animation" id="Animation_o0eyv"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}

[sub_resource type="Animation" id="Animation_4hb33"]
resource_name = "dig"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [20, 21, 22, 23, 24, 13]
}

[sub_resource type="Animation" id="Animation_a366j"]
resource_name = "idle"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 3]
}

[sub_resource type="Animation" id="Animation_tcqqm"]
resource_name = "move"
length = 0.7
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [10, 11, 12, 13, 14, 15, 16, 17]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"step_sound"
}, {
"args": [],
"method": &"step_sound"
}]
}

[sub_resource type="Animation" id="Animation_54shk"]
resource_name = "move_up"
length = 0.7
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [10, 11, 12, 13, 14, 15, 16, 17]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"step_sound"
}, {
"args": [],
"method": &"step_sound"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hwx2y"]
_data = {
"RESET": SubResource("Animation_o0eyv"),
"dig": SubResource("Animation_4hb33"),
"idle": SubResource("Animation_a366j"),
"move": SubResource("Animation_tcqqm"),
"move_up": SubResource("Animation_54shk")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_c54vf"]
animation = &"dig"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_ay34f"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_q8utn"]
animation = &"move"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3oxfl"]
animation = &"move_up"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_a4ojv"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_0hb82"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_vm6n8"]
reset = false

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_cdky6"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_1x0la"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_d4rti"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_rr8ex"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_8ia18"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_ox6em"]

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_d62yw"]
states/End/position = Vector2(724, 78)
states/Start/position = Vector2(205, 78)
states/dig/node = SubResource("AnimationNodeAnimation_c54vf")
states/dig/position = Vector2(381, -29)
states/idle/node = SubResource("AnimationNodeAnimation_ay34f")
states/idle/position = Vector2(381, 78)
states/move/node = SubResource("AnimationNodeAnimation_q8utn")
states/move/position = Vector2(578, 78)
states/move_up/node = SubResource("AnimationNodeAnimation_3oxfl")
states/move_up/position = Vector2(475, 170)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_a4ojv"), "idle", "move", SubResource("AnimationNodeStateMachineTransition_0hb82"), "move", "idle", SubResource("AnimationNodeStateMachineTransition_vm6n8"), "idle", "move_up", SubResource("AnimationNodeStateMachineTransition_cdky6"), "move", "move_up", SubResource("AnimationNodeStateMachineTransition_1x0la"), "idle", "dig", SubResource("AnimationNodeStateMachineTransition_d4rti"), "dig", "idle", SubResource("AnimationNodeStateMachineTransition_rr8ex"), "move_up", "move", SubResource("AnimationNodeStateMachineTransition_8ia18"), "move_up", "idle", SubResource("AnimationNodeStateMachineTransition_ox6em")]
graph_offset = Vector2(-131, -40)

[sub_resource type="AnimationNodeStateMachinePlayback" id="AnimationNodeStateMachinePlayback_mkdeu"]

[sub_resource type="Shader" id="Shader_73lvb"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 color : source_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rlpie"]
resource_local_to_scene = true
shader = SubResource("Shader_73lvb")
shader_parameter/color = Color(1, 1, 1, 1)
shader_parameter/width = 0.0
shader_parameter/pattern = 0
shader_parameter/inside = true
shader_parameter/add_margins = false

[node name="base_character" type="CharacterBody2D" node_paths=PackedStringArray("animation_tree", "sprite", "ui_nodes", "player_craft_obj")]
z_index = 1
y_sort_enabled = true
script = ExtResource("1_tsjtj")
animation_tree = NodePath("AnimationTree")
sprite = NodePath("sprite")
ui_nodes = NodePath("ui_nodes")
player_craft_obj = NodePath("player_craft")

[node name="camera" type="Camera2D" parent="."]
zoom = Vector2(4, 4)
process_callback = 0
position_smoothing_enabled = true

[node name="sprite" type="Sprite2D" parent="."]
texture_filter = 1
position = Vector2(-29, -4)
scale = Vector2(-1, 1)
texture = ExtResource("2_8g7ec")
hframes = 10
vframes = 6
frame = 1

[node name="ui_nodes" type="Control" parent="."]
layout_mode = 3
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
grow_horizontal = 2

[node name="progress_bar" type="ProgressBar" parent="ui_nodes"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -11.0
offset_top = -30.0
offset_right = 11.0
offset_bottom = -26.0
grow_horizontal = 2
theme_override_styles/background = SubResource("StyleBoxFlat_w1ie2")
theme_override_styles/fill = SubResource("StyleBoxFlat_1ntwy")
show_percentage = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_hwx2y")
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_d62yw")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource("AnimationNodeStateMachinePlayback_mkdeu")

[node name="player_craft" parent="." instance=ExtResource("3_muq4u")]
material = SubResource("ShaderMaterial_rlpie")
